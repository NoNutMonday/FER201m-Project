{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drag\\\\Documents\\\\Codes\\\\React\\\\Test\\\\working_data\\\\src\\\\components\\\\3_loadDataToTable.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadDataToTable = () => {\n  _s();\n  const [persons, setPerson] = useState([]);\n  const [type, setType] = useState('all');\n  useEffect(() => {\n    if (type !== 'all') {\n      fetch(`https://dummyjson.com/users/${type}`).then(res => res.json()).then(json => {\n        setPerson([json]);\n      });\n    } else {\n      fetch(\"../../Data/users.json\").then(res => res.json()).then(json => {\n        setPerson(json.users);\n      });\n    }\n  }, [type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setType(1);\n      },\n      children: \"User 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setType(2);\n      },\n      children: \"User 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setType(3);\n      },\n      children: \"User 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setType(4);\n      },\n      children: \"User 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: persons.map(_ref => {\n          let {\n            id,\n            firstName,\n            age\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(LoadDataToTable, \"uIvr7rkPfgCaiGGVCMu+MPo+BFY=\");\n_c = LoadDataToTable;\nexport default LoadDataToTable;\nvar _c;\n$RefreshReg$(_c, \"LoadDataToTable\");","map":{"version":3,"names":["useEffect","useState","Table","jsxDEV","_jsxDEV","LoadDataToTable","_s","persons","setPerson","type","setType","fetch","then","res","json","users","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","map","_ref","id","firstName","age","_c","$RefreshReg$"],"sources":["C:/Users/Drag/Documents/Codes/React/Test/working_data/src/components/3_loadDataToTable.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nconst LoadDataToTable = () => {\r\n\r\n    const [persons, setPerson] = useState([]);\r\n    const [type, setType] = useState('all');\r\n\r\n    useEffect(() => {\r\n        if (type !== 'all') {\r\n            fetch(`https://dummyjson.com/users/${type}`)\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    setPerson([json]);\r\n                });\r\n        } else {\r\n            fetch(\"../../Data/users.json\")\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    setPerson(json.users);\r\n                });\r\n        }\r\n\r\n    }, [type]);\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => { setType(1) }}>\r\n                User 1\r\n            </button>\r\n            <button onClick={() => { setType(2) }}>\r\n                User 2\r\n            </button>\r\n            <button onClick={() => { setType(3) }}>\r\n                User 3\r\n            </button>\r\n            <button onClick={() => { setType(4) }}>\r\n                User 4\r\n            </button>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Id\r\n                        </th>\r\n                        <th>\r\n                            Name\r\n                        </th>\r\n                        <th>\r\n                            Age\r\n                        </th>\r\n                        <th>\r\n                            Action\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        persons.map(({ id, firstName, age }) =>\r\n                            <tr key={id}>\r\n                                <td>\r\n                                    {id}\r\n                                </td>\r\n                                <td>\r\n                                    {firstName}\r\n                                </td>\r\n                                <td>\r\n                                    {age}\r\n                                </td>\r\n                                <td>\r\n                                    <button>\r\n                                        Edit\r\n                                    </button>\r\n                                    <button>\r\n                                        Delete\r\n                                    </button>\r\n                                </td>\r\n                            </tr>)\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadDataToTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}