{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drag\\\\Documents\\\\Codes\\\\React\\\\Test\\\\working_data\\\\src\\\\components\\\\3_loadDataToTable.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadDataToTable = () => {\n  _s();\n  const [persons, setPerson] = useState([]);\n  fetch('https://dummyjson.com/users').then(res => res.json()).then(json => {\n    if (Array.isArray(json.users)) {\n      setPerson(json.users);\n    } else {\n      console.error('Data returned from API is not an array:', json);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: persons.map(_ref => {\n        let {\n          id,\n          firstName,\n          age\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(LoadDataToTable, \"y88g7MHiFMfuUCk1PecuA0XcyPA=\");\n_c = LoadDataToTable;\nexport default LoadDataToTable;\nvar _c;\n$RefreshReg$(_c, \"LoadDataToTable\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","LoadDataToTable","_s","persons","setPerson","fetch","then","res","json","Array","isArray","users","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref","id","firstName","age","_c","$RefreshReg$"],"sources":["C:/Users/Drag/Documents/Codes/React/Test/working_data/src/components/3_loadDataToTable.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst LoadDataToTable = () => {\r\n\r\n    const [persons, setPerson] = useState([]);\r\n\r\n    fetch('https://dummyjson.com/users')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if (Array.isArray(json.users)) {\r\n                setPerson(json.users);\r\n            } else {\r\n                console.error('Data returned from API is not an array:', json);\r\n            }\r\n        })\r\n\r\n\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Id\r\n                    </th>\r\n                    <th>\r\n                        Name\r\n                    </th>\r\n                    <th>\r\n                        Age\r\n                    </th>\r\n                    <th>\r\n                        Action\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    persons.map(({ id, firstName, age }) =>\r\n                        <tr key={id}>\r\n                            <td>\r\n                                {id}\r\n                            </td>\r\n                            <td>\r\n                                {firstName}\r\n                            </td>\r\n                            <td>\r\n                                {age}\r\n                            </td>\r\n                            <td>\r\n                                <button>\r\n                                    Edit\r\n                                </button>\r\n                                <button>\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>)\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default LoadDataToTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}